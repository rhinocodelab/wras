#!/usr/bin/env python3
"""
Script to update Delay category templates with corrected versions
"""

import sqlite3

def update_delay_templates():
    """Update Delay category templates with corrected versions"""
    print("ЁЯЪА Updating Delay Category Templates...")
    print("=" * 50)
    
    # Connect to database
    db_path = "wras_dhh.db"
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # Get Delay category ID
        cursor.execute("SELECT id FROM announcement_categories WHERE category_code = 'delay'")
        category_result = cursor.fetchone()
        
        if not category_result:
            print("тЭМ Delay category not found!")
            return
            
        category_id = category_result[0]
        print(f"тЬЕ Found Delay category (ID: {category_id})")
        
        # Updated Delay templates
        delay_templates = {
            'en': "Attention Please! Train number {train_number} {train_name} from {start_station} to {end_station} is running late. We apologize for the inconvenience.",
            'hi': "рдХреГрдкрдпрд╛ рдзреНрдпрд╛рди рджреЗрдВ! рдЯреНрд░реЗрди рд╕рдВрдЦреНрдпрд╛ {train_number} {train_name} {start_station} рд╕реЗ {end_station} рдХреЗ рд▓рд┐рдП рдЪрд▓ рд░рд╣реА рд╣реИред рд╣рдореЗрдВ рд╣реБрдИ рдЕрд╕реБрд╡рд┐рдзрд╛ рдХреЗ рд▓рд┐рдП рдЦреЗрдж рд╣реИред",
            'mr': "рдХреГрдкрдпрд╛ рд▓рдХреНрд╖ рджреНрдпрд╛! рдЯреНрд░реЗрди рдХреНрд░рдорд╛рдВрдХ {train_number} {train_name} {start_station} рддреЗ {end_station} рдЙрд╢рд┐рд░рд╛ рдЖрд╣реЗ. рдЭрд╛рд▓реЗрд▓реНрдпрд╛ рдЧреИрд░рд╕реЛрдпреАрдмрджреНрджрд▓ рдЖрдореНрд╣реА рдХреНрд╖рдорд╕реНрд╡ рдЖрд╣реЛрдд.",
            'gu': "ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркзрлНркпрк╛рки ркЖрккрлЛ! ркЯрлНрк░рлЗрки ркиркВркмрк░ {train_number} {train_name} {start_station}ркерлА {end_station} ркорк╛ркЯрлЗ ркорлЛркбрлЗ ркЪрк╛рк▓рлА рк░рк╣рлА ркЫрлЗ. ркЕркЧрк│ ркеркпрлЗрк▓рлА ркЕрк╕рлБрк╡рк┐ркзрк╛ ркорк╛ркЯрлЗ ркХрлНрк╖ркорк╛ ркХрк░рк╢рлЛ."
        }
        
        templates_updated = 0
        
        for language_code, template_text in delay_templates.items():
            # Check if template exists
            cursor.execute(
                "SELECT id FROM announcement_templates WHERE category_id = ? AND language_code = ?",
                (category_id, language_code)
            )
            existing_template = cursor.fetchone()
            
            if existing_template:
                # Update existing template
                cursor.execute(
                    "UPDATE announcement_templates SET template_text = ? WHERE id = ?",
                    (template_text, existing_template[0])
                )
                templates_updated += 1
                print(f"   тЬЕ Updated {language_code} template")
            else:
                # Insert new template
                cursor.execute(
                    "INSERT INTO announcement_templates (category_id, language_code, template_text) VALUES (?, ?, ?)",
                    (category_id, language_code, template_text)
                )
                templates_updated += 1
                print(f"   тЬЕ Created {language_code} template")
        
        conn.commit()
        
        print("\n" + "=" * 50)
        print(f"тЬЕ Delay Templates Update Complete!")
        print(f"   Templates updated: {templates_updated}")
        
        # Show updated Delay templates
        print("\nЁЯУЛ Updated Delay Templates:")
        cursor.execute("""
            SELECT language_code, template_text 
            FROM announcement_templates 
            WHERE category_id = ? 
            ORDER BY language_code
        """, (category_id,))
        
        templates = cursor.fetchall()
        for template in templates:
            language_code, template_text = template
            print(f"   {language_code}: {template_text[:80]}...")
        
    except Exception as e:
        conn.rollback()
        print(f"тЭМ Error: {str(e)}")
    finally:
        conn.close()
    
    print("\n" + "=" * 50)
    print("тЬЕ Delay Templates Update Completed!")

if __name__ == "__main__":
    update_delay_templates() 